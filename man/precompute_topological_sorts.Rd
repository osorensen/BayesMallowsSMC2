% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{precompute_topological_sorts}
\alias{precompute_topological_sorts}
\title{Precompute All Topological Sorts}
\usage{
precompute_topological_sorts(prefs, n_items, save_frac)
}
\arguments{
\item{prefs}{A matrix representing the preference relations. This matrix
must have two columns, the first of which represents the preferred item
and the second of which represents the disfavored item.}

\item{n_items}{An integer specifying the number of items to sort.}

\item{save_frac}{Number between 0 and 1 specifying which fraction of sorts to save.}
}
\value{
This function returns the number of topological sorts.
}
\description{
This function precomputes all topological sorts for a given preference matrix and
saves them to a specified output directory. It ensures the output directory exists
and creates it if it does not.
}
\details{
The function generates all possible topological sorts for the provided preference matrix
and saves approximately \code{save_frac} of the sorts in a matrix which is returned.
}
\examples{
# Extract preferences from user 1 in the included example data.
prefs <- pairwise_preferences[
 pairwise_preferences$user == 1, c("top_item", "bottom_item"), drop = FALSE]

# Generate all topological sorts:
sorts <- precompute_topological_sorts(
  prefs = as.matrix(prefs),
  n_items = 5,
  save_frac = 0
)

# Number of sorts
sorts$sort_count
# Matrix with all of them
sorts$sort_matrix

}
